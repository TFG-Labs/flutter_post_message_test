import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_inappwebview/flutter_inappwebview.dart';

class MyChromeSafariBrowser extends ChromeSafariBrowser {

  @override
  void onOpened() async {
    print("ChromeSafari browser opened");
  }

  @override
  void onCompletedInitialLoad(didLoadSuccessfully) {
    print("ChromeSafari browser initial load completed");
  }

  @override
  void onClosed() {
    print("ChromeSafari browser closed");
  }

  @override
  void onPostMessage(String message) {
    print('On Post Message $message');
  }

  @override
  void onMessageChannelReady() {
    print('On Message Channel Ready');
  }

  @override
  void onServiceConnected() async {
    print('On Service Connected');
    // Validate the session as the same origin to allow cross origin headers.
    await validateRelationship(relation: CustomTabsRelationType.USE_AS_ORIGIN,
                               origin: WebUri("https://pay.staging.tfglabs.dev/app-sandbox"));
  }

  @override
  void onRelationshipValidationResult(
      CustomTabsRelationType? relation, Uri? requestedOrigin, bool result) async {
        print('On Relationship Validation Result: $result');
    // Launch Custom Tabs with non-approvelisted Extra Headers
    // after session was validated as the same origin.
    await launchUrl(url: WebUri("https://pay.staging.tfglabs.dev/app-sandbox"), headers: {
      'bearer-token': 'Some token',
      'redirect-url': 'Some redirect url',
      'blahblah' : 'hello'
    });
  }

}


class ChromeSafariBrowserExampleScreen extends StatefulWidget {
  final ChromeSafariBrowser browser = MyChromeSafariBrowser();

  @override
  _ChromeSafariBrowserExampleScreenState createState() =>
      _ChromeSafariBrowserExampleScreenState();
}

class _ChromeSafariBrowserExampleScreenState
    extends State<ChromeSafariBrowserExampleScreen> {

  @override
  void initState() {

    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    final twaUrl = Uri.parse('https://pay.staging.tfglabs.dev/app-sandbox');

    return Scaffold(
        appBar: AppBar(
            title: Text(
          "ChromeSafariBrowser",
            ),),
        body: Center(
          child: ElevatedButton(
              onPressed: () async {

                await widget.browser.open(
                    
                    url: WebUri("https://pay.staging.tfglabs.dev/app-sandbox"),
                    
                    settings: ChromeSafariBrowserSettings(
                        
                        shareState: CustomTabsShareState.SHARE_STATE_OFF,
                        isSingleInstance: false,
                        isTrustedWebActivity: false,
                        keepAliveEnabled: true,
                        startAnimations: [
                          AndroidResource.anim(
                              name: "slide_in_left", defPackage: "android"),
                          AndroidResource.anim(
                              name: "slide_out_right", defPackage: "android")
                        ],
                        exitAnimations: [
                          AndroidResource.anim(
                              name: "abc_slide_in_top",
                              defPackage:
                                  "com.pichillilorenzo.flutter_inappwebviewexample"),
                          AndroidResource.anim(
                              name: "abc_slide_out_top",
                              defPackage:
                                  "com.pichillilorenzo.flutter_inappwebviewexample")
                        ],
                        dismissButtonStyle: DismissButtonStyle.CLOSE,
                        presentationStyle:
                            ModalPresentationStyle.OVER_FULL_SCREEN));

                // final channel = await widget.browser.requestPostMessageChannel(sourceOrigin: WebUri('https://pay.staging.tfglabs.dev', forceToStringRawValue: false) , targetOrigin: WebUri('https://pay.staging.tfglabs.dev/app-sandbox', forceToStringRawValue: false) );
                // print('Channel: $channel');

              },
              child: Text("Open Chrome Safari Browser")),
        ));
  }
}